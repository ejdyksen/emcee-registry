name: deploy

on:
  workflow_run:
    workflows: ["build"]
    types:
      - completed
    branches:
      - main
      - master
  workflow_dispatch: # Allows manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  actions: read # Required to download artifacts

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout repository for deployment
        uses: actions/checkout@v4

      - name: Download artifact from build workflow
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build.yml
          name: registry-site
          path: public
          if_no_artifact_found: warn
          allow_forks: false # Security: Prevent artifact poisoning by excluding forks
        if: ${{ github.event_name != 'workflow_dispatch' }}

      # If manually triggered and no artifact, build it
      - name: Set up Node.js (manual trigger fallback)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Dependencies (manual trigger fallback)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: npm install glob

      - name: Build registry files (manual trigger fallback)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          # Only run if the public directory doesn't exist or is empty
          if [ ! -d "public" ] || [ -z "$(ls -A public 2>/dev/null)" ]; then
            echo "No artifacts found from build job, building locally..."

            # Validate JSON files first
            node scripts/validate-json.js

            # Build registry.json and index.html directly to public directory
            node scripts/build-registry.js public
          else
            echo "Using existing artifacts from previous build."
          fi

      - name: Verify deployment files
        run: |
          echo "Files to be deployed:"
          ls -la public/ || echo "Error: public directory not found"

          if [ -f "public/registry.json" ]; then
            echo "registry.json exists:"
            cat public/registry.json
          else
            echo "Error: registry.json not found in public directory"
            exit 1
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "public"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
